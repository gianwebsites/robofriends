{"version":3,"sources":["reportWebVitals.js","Components/Card.js","Components/CardList.js","Components/SearchBox.js","Components/Scroll.js","Containers/App.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","Card","name","email","id","className","alt","src","CardList","robots","map","user","i","SearchBox","searchfield","searchChange","type","placeholder","onChange","Scroll","props","style","overflowY","border","height","children","App","onSearchChange","event","setState","target","value","state","fetch","response","json","users","this","filteredRobots","filter","robot","toLowerCase","includes","length","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kQAYeA,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,oCCQCQ,G,MAZF,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,KAAMC,EAAgB,EAAhBA,MAAOC,EAAS,EAATA,GAC5B,OACC,sBAAKA,GAAG,OAAMC,UAAU,wCAAxB,UACC,qBAAKC,IAAI,QAAQC,IAAG,+BAA0BH,EAA1B,mBACpB,gCACC,6BAAKF,IACL,kCAAKC,aCaMK,EAnBE,SAAC,GAAc,IAAbC,EAAY,EAAZA,OAClB,OACC,8BAEIA,EAAOC,KAAI,SAACC,EAAMC,GACpB,OACC,cAAC,EAAD,CAEAR,GAAIK,EAAOG,GAAGR,GACdF,KAAMO,EAAOG,GAAGV,KAChBC,MAAOM,EAAOG,GAAGT,OAHXS,SCMIC,G,MAbG,SAAC,GAAgC,EAA/BC,YAAgC,IAAnBC,EAAkB,EAAlBA,aAChC,OACC,qBAAKV,UAAU,MAAf,SACC,uBAAOD,GAAG,YACRC,UAAU,mCACVW,KAAK,SACLC,YAAY,gBACZC,SAAUH,QCCAI,G,MARA,SAACC,GACf,OACC,qBAAKf,UAAU,SAASgB,MAAO,CAACC,UAAW,SAAUC,OAAQ,oBAAqBC,OAAQ,SAA1F,SACEJ,EAAMK,aC2CKC,G,wDAzCd,aAAe,IAAD,8BACb,gBAcDC,eAAiB,SAACC,GACjB,EAAKC,SAAS,CAACf,YAAac,EAAME,OAAOC,SAdzC,EAAKC,MAAQ,CACZvB,OAAQ,GACRK,YAAa,IAJD,E,gEAQO,IAAD,OACnBmB,MAAM,8CACLtC,MAAK,SAAAuC,GAAQ,OAAIA,EAASC,UAC1BxC,MAAK,SAAAyC,GAAK,OAAI,EAAKP,SAAS,CAAEpB,OAAQ2B,S,+BAS9B,IAAD,EACsBC,KAAKL,MAA5BvB,EADC,EACDA,OAAQK,EADP,EACOA,YACTwB,EAAiB7B,EAAO8B,QAAO,SAAAC,GACpC,OAAOA,EAAMtC,KAAKuC,cAAcC,SAAS5B,EAAY2B,kBAEtD,OAAQhC,EAAOkC,OAGd,sBAAKtC,UAAU,KAAf,UACC,oBAAID,GAAG,SAASC,UAAU,KAA1B,0BACA,oBAAID,GAAG,UAAUC,UAAU,KAA3B,gHAEA,cAAC,EAAD,CAAWD,GAAG,YAAWW,aAAcsB,KAAKV,iBAC5C,cAAC,EAAD,CAAQvB,GAAG,SAAX,SACA,cAAC,EAAD,CAAUK,OAAQ6B,SARpB,oBAAIlC,GAAG,UAAUC,UAAU,KAA3B,2B,GA3BgBuC,c,MCGlBC,IAASC,OACP,eAAC,IAAMC,WAAP,eAAmB,cAAC,EAAD,IAAnB,OAA+CC,SAASC,eAAe,SAKzEzD,M","file":"static/js/main.850a7303.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\r\nimport './Card.css';\r\n\r\nconst Card = ({ name, email, id }) => {\r\n\treturn(\r\n\t\t<div id='card'className=' tc dib br3 pa3 ma2 grow bw2 shadow-5'>\r\n\t\t\t<img alt='robot' src={`https://robohash.org/${id}?size=200x200`}/>\r\n\t\t\t<div>\r\n\t\t\t\t<h4>{name}</h4>\r\n\t\t\t\t<p> {email}</p>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default Card;","import React from 'react';\r\nimport Card from './Card';\r\n\r\nconst CardList = ({robots}) => {\r\n\treturn (\r\n\t\t<div>\r\n\t\t  {\r\n\t\t    robots.map((user, i) => {\r\n\t\t\t\treturn (\r\n\t\t\t\t\t<Card \r\n\t\t\t\t\tkey ={i}\r\n\t\t\t\t\tid={robots[i].id}\r\n\t\t\t\t\tname={robots[i].name}\r\n\t\t\t\t\temail={robots[i].email}\r\n\t\t\t\t\t/>\r\n\t\t\t\t);\r\n\t\t\t})\r\n\t\t  }\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default CardList;","import React from 'react';\r\nimport './Searchbox.css';\r\n\r\nconst SearchBox = ({searchfield, searchChange}) => {\r\n\treturn (\r\n\t\t<div className='pa2'>\r\n\t\t\t<input id='searchbox'\r\n\t\t\t\t className='pa3 ba b--green bg-lightest-pink'\r\n\t\t\t\t type='search'\r\n\t\t\t\t placeholder='Search Robots'\r\n\t\t\t\t onChange={searchChange}\r\n\t\t\t  />\r\n\t\t</div>\r\n\t\t);\r\n}\r\n\r\nexport default SearchBox;","import React from 'react';\r\nimport './scroll.css';\r\n\r\nconst Scroll = (props) => {\r\n\treturn (\r\n\t\t<div className='scroll' style={{overflowY: 'scroll', border: '1px solid #f5c4ff', height: '500px'}}>\r\n\t\t\t{props.children}\r\n\t\t</div>\r\n\t\t);\r\n};\r\n\r\nexport default Scroll; \r\n\r\n","import React, {Component} from 'react';\r\nimport CardList from '../Components/CardList';\r\nimport SearchBox from '../Components/SearchBox';\r\nimport Scroll from '../Components/Scroll';\r\nimport './App.css';\r\n\r\n\r\nclass App extends Component {\r\n\tconstructor() {\r\n\t\tsuper()\r\n\t\tthis.state = {\r\n\t\t\trobots: [],\r\n\t\t\tsearchfield: ''\r\n\t\t}\r\n\t}\r\n\r\n\tcomponentDidMount() {\r\n\t\tfetch('https://jsonplaceholder.typicode.com/users')\r\n\t\t.then(response => response.json())\r\n\t\t.then(users => this.setState({ robots: users}));\r\n\t}\r\n\r\n\r\n\tonSearchChange = (event) => {\r\n\t\tthis.setState({searchfield: event.target.value})\r\n\t}\r\n\r\n\r\n\trender() {\r\n\t\tconst {robots, searchfield} = this.state;\r\n\t\tconst filteredRobots = robots.filter(robot => {\r\n\t\t\treturn robot.name.toLowerCase().includes(searchfield.toLowerCase());\r\n\t\t})\r\n\t\treturn !robots.length ?\r\n\t\t<h1 id='loading' className='tc'> Loading </h1>:\r\n\t\t\t(\r\n\t\t\t<div className='tc'>\r\n\t\t\t\t<h1 id='header' className='f1'> RoboFriends</h1>\r\n\t\t\t\t<h2 id='header2' className='f2'  > Welcome To RoboFriends App. This Is An Example Of \r\n\t\t\t\tHow Interactive Your New Website Can Be. Enjoy!</h2>\r\n\t\t\t\t<SearchBox id='searchbox'searchChange={this.onSearchChange}/>\r\n\t\t\t\t<Scroll id='scroll'>\r\n\t\t\t\t<CardList robots={filteredRobots}/>\r\n\t\t\t\t</Scroll>\r\n\t\t\t\t </div>\r\n\t\t\t\t);\r\n\t\t\t}\r\n\t\t}\r\n\r\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport reportWebVitals from './reportWebVitals';\nimport './index.css';\nimport App from './Containers/App';\nimport 'tachyons';\nimport { robots } from './robots';\n\n\n\nReactDOM.render(\n  <React.StrictMode> <App/> </React.StrictMode>, document.getElementById('root'));\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}